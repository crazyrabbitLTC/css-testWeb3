[{"/Users/dennisonbertram/Documents/css-chakra/src/Logo.tsx":"1","/Users/dennisonbertram/Documents/css-chakra/src/App.tsx":"2","/Users/dennisonbertram/Documents/css-chakra/src/serviceWorker.ts":"3","/Users/dennisonbertram/Documents/css-chakra/src/common/hooks/useWeb3.ts":"4","/Users/dennisonbertram/Documents/css-chakra/src/components/ColorModeSwitcher.tsx":"5","/Users/dennisonbertram/Documents/css-chakra/src/components/Header.tsx":"6"},{"size":575,"mtime":1611876238346,"results":"7","hashOfConfig":"8"},{"size":1028,"mtime":1611962591210,"results":"9","hashOfConfig":"8"},{"size":5258,"mtime":1611876238348,"results":"10","hashOfConfig":"8"},{"size":4715,"mtime":1611965635951,"results":"11","hashOfConfig":"8"},{"size":743,"mtime":1611962547387,"results":"12","hashOfConfig":"8"},{"size":1395,"mtime":1611967169045,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"clvx43",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},"/Users/dennisonbertram/Documents/css-chakra/src/Logo.tsx",[],"/Users/dennisonbertram/Documents/css-chakra/src/App.tsx",["27"],"/Users/dennisonbertram/Documents/css-chakra/src/serviceWorker.ts",[],"/Users/dennisonbertram/Documents/css-chakra/src/common/hooks/useWeb3.ts",["28","29","30","31"],"/Users/dennisonbertram/Documents/css-chakra/src/components/ColorModeSwitcher.tsx",[],"/Users/dennisonbertram/Documents/css-chakra/src/components/Header.tsx",["32","33","34"],"import React, { ReactElement } from 'react'\nimport { Flex, Button, Text, HStack } from \"@chakra-ui/react\";\nimport { ColorModeSwitcher } from \"./ColorModeSwitcher\";\n\nimport { useWeb3 } from '../common/hooks/useWeb3';\ninterface Props {\n\n}\n\nexport const shortAddress = (address: string, initialLength = 6, endLength = -4): string =>\n  `${address.slice(0, initialLength)}...${address.slice(endLength)}`;\n\nexport default function Header({ }: Props): ReactElement {\n\n\n    const { etherBalance ,isWeb3Ready, openMetamask, signerAddress } = useWeb3();\n    return (\n        <>\n            <Flex color=\"blue\" justifyContent=\"flex-end\" alignItems=\"center\" margin=\"15px\">\n                <HStack spacing=\"20px\">\n                    <Text fontSize=\"m\" color=\"gray.500\">{isWeb3Ready && signerAddress ? shortAddress(signerAddress) : null}</Text>\n                    <Text>{etherBalance ? Number(etherBalance).toFixed(2) : \"0.0\"}ETH</Text>\n                    <Button onClick={() => openMetamask()}>{isWeb3Ready ? \"Connected\" : \"Connect Metamask\"}</Button>\n                    <ColorModeSwitcher />\n                </HStack>\n            </Flex>\n\n        </>\n    )\n}\n\n\n// chainId: 1\n// contractInstance: undefined\n// currentBlock: undefined\n// isWeb3Ready: false\n// openMetamask: async () => {â€¦}\n// signer: JsonRpcSigner {_isSigner: true, provider: Web3Provider, _index: 0, _address: null}\n// signerAddress: \"\"",{"ruleId":"35","severity":1,"message":"36","line":8,"column":3,"nodeType":"37","messageId":"38","endLine":8,"endColumn":9},{"ruleId":"35","severity":1,"message":"39","line":4,"column":28,"nodeType":"37","messageId":"38","endLine":4,"endColumn":37},{"ruleId":"40","severity":1,"message":"41","line":78,"column":8,"nodeType":"42","endLine":78,"endColumn":10,"suggestions":"43"},{"ruleId":"40","severity":1,"message":"44","line":146,"column":8,"nodeType":"42","endLine":146,"endColumn":21,"suggestions":"45"},{"ruleId":"40","severity":1,"message":"46","line":152,"column":8,"nodeType":"42","endLine":152,"endColumn":10,"suggestions":"47"},{"ruleId":"48","severity":1,"message":"49","line":13,"column":32,"nodeType":"50","messageId":"51","endLine":13,"endColumn":42},{"ruleId":"35","severity":1,"message":"52","line":16,"column":13,"nodeType":"37","messageId":"38","endLine":16,"endColumn":20},{"ruleId":"35","severity":1,"message":"53","line":16,"column":22,"nodeType":"37","messageId":"38","endLine":16,"endColumn":34},"@typescript-eslint/no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'providers' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setProvider'. Either include it or remove the dependency array.","ArrayExpression",["54"],"React Hook useEffect has missing dependencies: 'signer', 'signerAddress', and 'web3Provider'. Either include them or remove the dependency array.",["55"],"React Hook useEffect has a missing dependency: 'isDomReady'. Either include it or remove the dependency array.",["56"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","'chainId' is assigned a value but never used.","'currentBlock' is assigned a value but never used.",{"desc":"57","fix":"58"},{"desc":"59","fix":"60"},{"desc":"61","fix":"62"},"Update the dependencies array to be: [setProvider]",{"range":"63","text":"64"},"Update the dependencies array to be: [isWeb3Ready, signer, signerAddress, web3Provider]",{"range":"65","text":"66"},"Update the dependencies array to be: [isDomReady]",{"range":"67","text":"68"},[2346,2348],"[setProvider]",[4250,4263],"[isWeb3Ready, signer, signerAddress, web3Provider]",[4396,4398],"[isDomReady]"]